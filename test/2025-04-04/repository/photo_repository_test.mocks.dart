// Mocks generated by Mockito 5.4.5 from annotations
// in modu_3_dart_study/test/2025-04-04/repository/photo_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;
import 'package:modu_3_dart_study/2025-04-04/data_source/photo_data_source.dart'
    as _i2;
import 'package:modu_3_dart_study/2025-04-04/dto/photo_dto.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PhotoDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPhotoDataSource extends _i1.Mock implements _i2.PhotoDataSource {
  MockPhotoDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get path =>
      (super.noSuchMethod(
            Invocation.getter(#path),
            returnValue: _i3.dummyValue<String>(this, Invocation.getter(#path)),
          )
          as String);

  @override
  _i4.Future<List<_i5.PhotoDto>> fetchPhotos() =>
      (super.noSuchMethod(
            Invocation.method(#fetchPhotos, []),
            returnValue: _i4.Future<List<_i5.PhotoDto>>.value(<_i5.PhotoDto>[]),
          )
          as _i4.Future<List<_i5.PhotoDto>>);
}
