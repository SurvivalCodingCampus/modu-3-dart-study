@startuml
interface Groupable {
 + void commandMove()
 + void commandAttack()
}
class TerranUnitGroup implements Groupable {
List<TerranUnit> TerranUnit
+ void addUnit(TerranUnit unit)
+ void removeUnit(TerranUnit unit)
}
class ZergUnitGroup implements Groupable {
List<ZergUnit> ZergUnit
+ void addUnit(ZergUnit unit)
+ void removeUnit(ZergUnit unit)
}
class ProtossUnitGroup implements Groupable {
List<ProtossUnit> ProtossUnit
+ void addUnit(ProtossUnit unit)
+ void removeUnit(ProtossUnit unit)
}


abstract class Terran {
}

abstract class Unit extends Terran implements Attackable {

    + String name
    + int healthPoint

}

interface Attackable {
  + void attack(Unit attack)
}

abstract class Structure extends Terran{
}

abstract class Bionic extends Unit {

}

abstract class Mechanic extends Unit {
}

class Marine extends Bionic {

}

class Medic extends Bionic implements Healable {
    + @override void attack(Unit attack)

}

interface Healable {
    + void heal(Bionic unit)
    + void repair(Scv scv)
}

class Tank extends Mechanic {

}

class Vulture extends Mechanic {

}

class Scv extends Mechanic {
    void collect()
    void fixmecha()
}

@enduml

@startuml

abstract class Zerg {
}

abstract class Unit extends Zerg implements Attackable {

    + String name
    + int healthPoint

}

interface Attackable {
  + void attack(Unit attack)
}

abstract class Structure extends Zerg{
}

abstract class Bionic extends Unit {

}

class Zergling extends Bionic {

}

class Hydra extends Bionic {

}

class Medic extends Bionic implements Healable {
    + @override void attack(Unit attack)

}

interface Healable {
    + void heal(Bionic unit)
    + void repair(Scv scv)
}

@enduml

@startuml
abstract class Protoss {
}

abstract class Unit extends Protoss implements Attackable, Shieldable {

    + String name
    + int healthPoint

}

interface Shieldable implements RegenerateShieldable {
  + void shield(Unit attack)
}

interface RegenerateShieldable {
  + regenerateShield()
}

interface Attackable {
  + void attack()
}

abstract class Structure extends Protoss implements Shieldable{
}

abstract class Bionic extends Unit {

}

class Zealot extends Bionic {

}

abstract class Mechanic extends Unit {
}

class Dragun extends Mechanic {

}

class Medic extends Bionic implements Healable {
    + @override void attack()

}

interface Healable {
    + void heal(Bionic unit)
    + void repair(Scv scv)
}
@enduml
