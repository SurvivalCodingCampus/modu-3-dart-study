@startuml
'https://plantuml.com/class-diagram

abstract class Structure {
    int hp;
    int cost;
    int? shield;
}

abstract class Unit implements Movable {
    int hp;
    int cost;
    int defence;
    int? damage; // 메딕은 제외
    int? shield; // 프로토스만
}

class Marine extends Unit implements Terran, Bionic, Attackable, IsHealable {
    void attack();
    void move();
}

class Medic extends Unit implements Terran, Bionic, Healable, IsHealable {
    void move();
    void heal(Unit unit);
}

class Scv extends Unit implements Terran, Mechanic, IsHealable, IsRepairable, Harvestable, Attackable, Repairable {
    void harvest();
    void repairMachine();
}

class Vulture extends Unit implements Terran, Mechanic, IsRepairable, Attackable {
    void move();
    void attack();
}

class Tank extends Unit implements Terran, Attackable, Mechanic, IsRepairable {
    void move();
    void attack();
}

class Zergling extends Unit implements Zerg, Attackable, IsHealable, Bionic, AutoRecovable {
    void move();
    void attack();
    void naturalRecovery();
}

class Hydra extends Unit implements Zerg, Attackable, IsHealable, Bionic, AutoRecovable {
    void move();
    void attack();
    void naturalRecovery();
}

class Zealot extends Unit implements Protoss, Attackable, IsHealable, AutoRecovable {
    void move();
    void attack();
    void naturalRecovery();
}

class Dragun extends Unit implements Protoss, Attackable, Mechanic, AutoRecovable {
    void move();
    void attack();
    void naturalRecovery();
}

interface Terran {}
interface Zerg {}
interface Protoss {}

interface Bionic {}
interface Mechanic {}

interface Attackable {
    {abstract} void attack();
}

interface Movable {
    {abstract} void move();
}

interface Healable {
    {abstract} void heal(Unit unit);
}

interface IsHealable {}

interface Repairable {
    {abstract} void repairable();
}

interface IsRepairable {}

interface Harvestable {
    {abstract} void harvest();
}

interface AutoRecovable {
    {abstract} void autoRecovable();
}

@enduml